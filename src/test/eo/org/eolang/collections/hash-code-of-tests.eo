# The MIT License (MIT)
#
# Copyright (c) 2021-2022 Yegor Bugayenko
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

+alias org.eolang.collections.hash-code-of
+alias org.eolang.hamcrest.assert-that
+alias org.eolang.math.number
+home https://github.com/objectionary/eo-collections
+junit
+package org.eolang.collections
+version 0.0.0

# @todo #156:30min Add more tests for hash-code-of object.
#  It would be interesting to test floating numbers and, maybe, big numbers
#  (or some corner cases)
[] > hash-code-of-bools-is-integer
  assert-that > @
    and.
      is-int.
        number
          hash-code-of TRUE
      is-int.
        number
          hash-code-of FALSE
    $.equal-to TRUE

[] > hash-code-of-int-is-int
  assert-that > @
    is-int.
      number
        hash-code-of 42
    $.equal-to TRUE

[] > hash-codes-of-the-same-int-are-equal-1
  123456789012345678 > big-int!
  assert-that > @
    hash-code-of big-int
    $.equal-to
      hash-code-of big-int

[] > hash-codes-of-the-same-int-are-equal-2
  42 > forty-two!
  assert-that > @
    hash-code-of forty-two
    $.equal-to
      hash-code-of forty-two

[] > hash-codes-of-different-int-are-not-equal-1
  assert-that > @
    hash-code-of 42
    $.not
      $.equal-to
        hash-code-of 24

[] > hash-codes-of-different-int-are-not-equal-2
  assert-that > @
    hash-code-of 42
    $.not
      $.equal-to
        hash-code-of -42

[] > hash-code-of-string-is-int
  assert-that > @
    is-int.
      number
        hash-code-of "hello"
    $.equal-to TRUE

[] > hash-codes-of-the-same-strings-are-equal
  "hello" > str!
  assert-that > @
    hash-code-of str
    $.equal-to
      hash-code-of str

# @todo #156:30min Enable this test after fixing issue #205
#  Don't forget to rename this test
[] > hash-codes-of-different-strings-are-not-equal-broken
  assert-that > res
    hash-code-of "hello!"
    $.not
      $.equal-to
        hash-code-of "help!!"
  nop > @

[] > hash-codes-of-different-strings-are-not-equal
  assert-that > @
    hash-code-of "hello"
    $.not
      $.equal-to
        hash-code-of "bye!!!"

[] > hash-code-of-abstract-object-is-int
  [x] > obj
    x > @
  assert-that > @
    is-int.
      number
        hash-code-of (obj 42)
    $.equal-to TRUE

[] > hash-codes-of-the-same-abstract-objects-are-equal
  [x] > obj
    x > @
  obj 42 > forty-two-obj!
  assert-that > @
    hash-code-of forty-two-obj
    $.equal-to
      hash-code-of forty-two-obj
